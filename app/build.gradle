apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.marktony.zhihudaily"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 20
        versionName "V3.3.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

androidExtensions {
    experimental = true
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    implementation "com.android.support:appcompat-v7:${versions.support_library}"
    implementation "com.android.support:design:${versions.support_library}"
    implementation "com.android.support:preference-v14:${versions.support_library}"
    implementation "com.android.support:customtabs:${versions.support_library}"

    implementation "android.arch.persistence.room:runtime:${versions.arch_room}"

    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"

    implementation("com.wdullaer:materialdatetimepicker:${versions.date_time_picker}") {
        exclude group: 'com.android.support'
    }

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.hamcrest:hamcrest-all:${versions.hamcrest}"

    androidTestImplementation "com.android.support.test:runner:${versions.support_test}"
    androidTestImplementation "com.android.support.test:rules:${versions.support_test}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${versions.espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${versions.espresso}"
    androidTestImplementation "org.mockito:mockito-android:${versions.mockito}"

}
